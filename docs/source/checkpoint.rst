.. note::
   يتم تنفيذ إنشاء نقطة التفتيش عن طريق إعادة تشغيل جزء من عملية التغذية الأمامية لكل جزء تمت نقطة تفتيشه أثناء الانتشار الخلفي. يمكن أن يتسبب ذلك في تقدم حالات الإصرار مثل حالة مولد الأرقام العشوائية (RNG) أكثر مما كانت ستكون عليه بدون إنشاء نقطة تفتيش. بشكل افتراضي، يتضمن إنشاء نقطة التفتيش منطقًا لموازنة حالة مولد الأرقام العشوائية بحيث يكون للمرور الذي تم نقطة تفتيشه والذي يستخدم مولد الأرقام العشوائية (من خلال الإسقاط العشوائي على سبيل المثال) إخراج محدد مقارنة بالمرور غير الخاضع لنقطة التفتيش. يمكن أن يتسبب منطق تخزين واستعادة حالات مولد الأرقام العشوائية في حدوث انخفاض ملحوظ في الأداء اعتمادًا على وقت تشغيل العمليات الخاضعة لنقطة التفتيش. إذا لم تكن الإخراج المحددة مقارنة بالمرور غير الخاضع لنقطة التفتيش مطلوبة، فقم بتمرير "preserve_rng_state=False" إلى "checkpoint" أو "checkpoint_sequential" لتجاوز تخزين واستعادة حالة مولد الأرقام العشوائية أثناء كل نقطة تفتيش.

   يقوم منطق التخزين بحفظ واستعادة حالة مولد الأرقام العشوائية للـ CPU ونوع جهاز آخر (يستنتج نوع الجهاز من وسائط Tensor باستثناء تنسورات CPU بواسطة _infer_device_type) إلى run_fn. إذا كان هناك أجهزة متعددة، فسيتم حفظ حالة الجهاز فقط لأجهزة نوع جهاز واحد، وسيتم تجاهل الأجهزة المتبقية. وبالتالي، إذا كانت أي وظائف خاضعة لنقطة التفتيش تنطوي على عشوائية، فقد يؤدي ذلك إلى نتائج تدرجات غير صحيحة. (ملاحظة: إذا كانت أجهزة CUDA من بين الأجهزة المكتشفة، فستكون لها الأولوية؛ وإلا، سيتم تحديد الجهاز الأول الذي يتم اكتشافه.) إذا لم تكن هناك تنسورات CPU، فسيتم حفظ حالة نوع الجهاز الافتراضي (القيمة الافتراضية هي "cuda"، ويمكن تعيينها إلى جهاز آخر بواسطة DefaultDeviceType) واستعادتها. ومع ذلك، لا توجد طريقة للمنطق لتوقع ما إذا كان المستخدم سينقل وسائط Tensor إلى جهاز جديد داخل run_fn نفسه. لذلك، إذا قمت بنقل تنسورات إلى جهاز جديد ("جديد" بمعنى أنه لا ينتمي إلى مجموعة [الجهاز الحالي + أجهزة وسائط Tensor]) داخل run_fn، فإن الإخراج المحدد مقارنة بالمرور غير الخاضع لنقطة التفتيش غير مضمون أبدًا.

.. currentmodule:: torch.utils.checkpoint
.. autofunction:: checkpoint
.. autofunction:: checkpoint_sequential
.. autofunction:: set_checkpoint_debug_enabled
.. autoclass:: CheckpointPolicy
.. autoclass:: SelectiveCheckpointContext
.. autofunction:: create_selective_checkpoint_contexts