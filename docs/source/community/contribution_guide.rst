.. note::

   تم إيقاف العمل بهذه الصفحة. يرجى الرجوع إلى `دليل المساهمة <https://github.com/pytorch/pytorch/wiki/The-Ultimate-Guide-to-PyTorch-Contributions>`_ على ويكي PyTorch.

دليل المساهمة في PyTorch
==========================
PyTorch هو حزمة حسابات تنسور Python معجلة بواسطة GPU لبناء شبكات عصبية عميقة باستخدام أنظمة autograd المستندة إلى الشريط.

عملية المساهمة
----------
تدار منظمة PyTorch بواسطة :doc:`حوكمة PyTorch <governance>` ويمكن العثور على الدليل الفني للمساهمة في `CONTRIBUTING.md <https://github.com/pytorch/pytorch/blob/main/CONTRIBUTING.md>`_.

تتضمن عملية تطوير PyTorch قدرًا صحيًا من المناقشات المفتوحة بين فريق التطوير الأساسي والمجتمع.

تعمل PyTorch بشكل مشابه لمعظم مشاريع المصادر المفتوحة على GitHub. ومع ذلك، إذا لم تساهم من قبل في مشروع مفتوح المصدر، فهذه هي العملية الأساسية.

-  **حدد ما الذي ستعمل عليه.** تأتي غالبية المساهمات مفتوحة المصدر من الأشخاص الذين يحكون حكتهم. ومع ذلك، إذا لم تكن تعرف ما الذي تريد العمل عليه، أو إذا كنت ترغب فقط في التعرف أكثر على المشروع، فهناك بعض النصائح للعثور على المهام المناسبة:

   -  تصفح `قائمة المشكلات <https://github.com/pytorch/pytorch/issues/>`__ وشاهد ما إذا كانت هناك أي مشكلات تعرف كيفية إصلاحها. تميل المشكلات التي تم تأكيدها من قبل المساهمين الآخرين إلى أن تكون أفضل للتحقيق. كما أننا نحتفظ ببعض العلامات للمشكلات التي من المحتمل أن تكون جيدة للأشخاص الجدد، على سبيل المثال، **bootcamp** و **1hr**، على الرغم من أن هذه العلامات أقل جودة.
   -  انضم إلينا على `dev discuss <https://dev-discuss.pytorch.org/>`_ وأخبرنا أنك مهتم بمعرفة المزيد عن PyTorch. نحن سعداء جدًا بمساعدة الباحثين والشركاء على التعرف على قاعدة التعليمات البرمجية.

-  **حدد نطاق تغييرك واطلب التعليقات على التصميم في مشكلة GitHub إذا كان كبيرًا.** غالبية طلبات السحب صغيرة؛ في هذه الحالة، لا داعي لإخبارنا بما تريد القيام به، فقط قم بذلك. ولكن إذا كان التغيير سيكون كبيرًا، فمن الجيد عادةً الحصول على بعض تعليقات التصميم حوله أولاً عن طريق `تقديم RFC <https://github.com/pytorch/rfcs/blob/master/README.md>`__.

   -  إذا لم تكن تعرف حجم التغيير، فيمكننا مساعدتك في معرفته! ما عليك سوى نشره حوله في
      `المشكلات <https://github.com/pytorch/pytorch/issues/>`_ أو
      `dev discuss <https://dev-discuss.pytorch.org/>`_.
   -  بعض الإضافات المميزة موحدة للغاية؛ على سبيل المثال، يضيف الكثير من الأشخاص مشغلين أو محسنات جديدة إلى PyTorch. تنحصر مناقشة التصميم في هذه الحالات إلى حد كبير في "هل نريد هذا المشغل/المحسن؟" إن تقديم الأدلة على فائدته، مثل الاستخدام في الأوراق البحثية التي راجعها النظراء، أو وجودها في أطر عمل أخرى، يساعد قليلاً عند تقديم هذه الحالة.

      - **إضافة مشغلين / خوارزميات من الأبحاث التي تم إصدارها مؤخرًا**
        لا يتم قبولها بشكل عام ما لم تكن هناك أدلة ساحقة على أن هذا العمل المنشور حديثًا يحقق نتائج رائدة وسوف يصبح معيارًا في هذا المجال. إذا لم تكن متأكدًا من مكان وجود طريقتك، فقم بفتح مشكلة أولاً قبل تنفيذ طلب سحب.

   -  يمكن أن تكون التغييرات وإعادة التنظيم الأساسية صعبة التنسيق لأن وتيرة التطوير في الفرع الرئيسي لـ PyTorch سريعة للغاية. تواصل بالتأكيد حول التغييرات الأساسية أو الشاملة؛
     يمكننا غالبًا تقديم التوجيه حول كيفية تنظيم هذه التغييرات إلى أجزاء يمكن مراجعتها بسهولة أكبر.

-  **قم بترميزها!**

   -  راجع ملف `CONTRIBUTING.md <https://github.com/pytorch/pytorch/blob/main/CONTRIBUTING.md>`_ للحصول على المشورة للعمل مع PyTorch في شكل تقني.

-  **افتح طلب سحب.**

   -  إذا لم تكن مستعدًا لمراجعة طلب السحب، فأنشئ طلب سحب مسودة أولاً - يمكنك لاحقًا تحويله إلى طلب سحب كامل عن طريق النقر فوق الزر "جاهز للمراجعة". يمكنك أيضًا إضافة "[WIP]" ("العمل قيد التقدم") إلى عنوان PR أثناء وجوده في المسودة. سنتجاهل طلبات السحب المسودة عند إجراء عمليات المراجعة. إذا كنت تعمل على تغيير معقد،
     من الجيد البدء بالأشياء كمسودة، لأنك ستحتاج إلى قضاء بعض الوقت في النظر في نتائج CI لمعرفة ما إذا كانت الأمور قد نجحت أم لا.
   -  ابحث عن مراجع مناسب لتغييرك. لدينا بعض الأشخاص
     الذين يمرون بانتظام عبر قائمة انتظار طلبات السحب ويحاولون مراجعة
     كل شيء، ولكن إذا كنت تعرف من هو المسؤول عن نظام فرعي معين يتأثر رقعة الخاص بك، لا تتردد في إضافته مباشرة إلى طلب السحب. يمكنك معرفة المزيد حول
     `أشخاص مهمون <https://pytorch.org/docs/main/community/persons_of_interest.html>`_
     الذين يمكنهم مراجعة التعليمات البرمجية الخاصة بك.

-  **قم بتكرار طلب السحب حتى يتم قبوله!**

   -  سنبذل قصارى جهدنا لتقليل عدد جولات المراجعة وحظر طلبات السحب فقط عندما تكون هناك مشكلات رئيسية. بالنسبة للمشكلات الأكثر شيوعًا في طلبات السحب، راجع `الأخطاء الشائعة <#common-mistakes-to-avoid>`__.
   -  بمجرد قبول طلب سحب واجتياز CI، لا يلزم القيام بأي شيء آخر؛ سنقوم بدمج PR نيابة عنك.

البدء
---------------
اقتراح ميزات جديدة
~~~~~~~~~~~~~~~~~~~~~~
من الأفضل مناقشة أفكار الميزات الجديدة في مشكلة محددة. يرجى تضمين أكبر قدر ممكن من المعلومات والبيانات المصاحبة، وحلك المقترح. يقوم فريق PyTorch والمجتمع بانتظام بمراجعة المشكلات والتعليقات الجديدة حيث يعتقدون أنهم يمكن أن يساعدوا. إذا كنت تشعر بالثقة في حل، فانتقل إلى التنفيذ.

الإبلاغ عن المشكلات
~~~~~~~~~~~~~~~~
إذا حددت مشكلة، فابحث أولاً في `قائمة <https://github.com/pytorch/pytorch/issues>`__ بالمشكلات الموجودة على المستودع. إذا لم تتمكن من العثور على مشكلة مماثلة، فأنشئ واحدة جديدة. قم بتزويد أكبر قدر ممكن من المعلومات لإعادة إنتاج السلوك المشكل. أيضًا، قم بتضمين أي رؤى إضافية مثل السلوك الذي تتوقعه.

تنفيذ الميزات أو إصلاح الأخطاء
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
إذا كنت تريد إصلاح مشكلة محددة، فمن الأفضل التعليق على المشكلة الفردية بنيتك. ومع ذلك، فإننا لا نقوم بقفل أو تعيين المشكلات إلا في الحالات التي عملنا فيها مع المطور من قبل. من الأفضل بدء محادثة حول المشكلة ومناقشة الحل المقترح. يمكن لفريق PyTorch تقديم التوجيه الذي يوفر وقتك.

توفر المشكلات التي تحمل علامة first-new-issue أو low أو medium priority أفضل نقاط الدخول وهي أماكن رائعة للبدء.

إضافة البرامج التعليمية
~~~~~~~~~~~~~~~~
يأتي عدد كبير من البرامج التعليمية على `pytorch.org <https://pytorch.org/>`__
من المجتمع نفسه ونحن نرحب بالمساهمات الإضافية. لمعرفة المزيد حول كيفية المساهمة ببرنامج تعليمي جديد، يمكنك معرفة المزيد هنا: `دليل مساهمة البرنامج التعليمي PyTorch.org على
GitHub <https://github.com/pytorch/tutorials/#contributing>`__

تحسين الوثائق والبرامج التعليمية
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
نحن نهدف إلى إنتاج وثائق وبرامج تعليمية عالية الجودة. في حالات نادرة، قد يتضمن المحتوى أخطاء إملائية أو أخطاء. إذا وجدت شيئًا يمكنك إصلاحه، فأرسل إلينا طلب سحب للنظر فيه.

القسم `الوثائق <#on-documentation>`__ لمعرفة كيفية عمل نظامنا.

المشاركة في المناقشات عبر الإنترنت
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
يمكنك العثور على مناقشات نشطة تحدث على `منتديات مناقشة PyTorch <https://discuss.pytorch.org/>`__  للمستخدمين وكذلك
`منتديات مناقشة PyTorch Dev <https://dev-discuss.pytorch.org/>`__
للمطورين والمسؤولين عن الصيانة.

تقديم طلبات السحب لإصلاح المشكلات المفتوحة
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
يمكنك عرض قائمة بجميع المشكلات المفتوحة
`هنا <https://github.com/pytorch/pytorch/issues>`__. التعليق على مشكلة هي طريقة رائعة لجذب انتباه الفريق. من هنا يمكنك مشاركة أفكارك وكيف تخطط لحل المشكلة.

بالنسبة للمشكلات الأكثر صعوبة، سيقدم الفريق التعليقات والتوجيهات حول كيفية حل المشكلة على أفضل وجه.

إذا لم تتمكن من إصلاح المشكلة بنفسك، فإن التعليق ومشاركة ما إذا كنت تستطيع إعادة إنتاج المشكلة يمكن أن يساعد الفريق
تحديد مناطق المشكلات.

مراجعة طلبات السحب المفتوحة
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
نحن نقدر مساعدتك في مراجعة طلبات السحب والتعليق عليها. يسعى فريقنا جاهدين للحفاظ على عدد طلبات السحب المفتوحة بحجم يمكن إدارته، ونرد بسرعة للحصول على مزيد من المعلومات إذا كنا بحاجة إليها، ونقوم بدمج طلبات السحب التي نعتقد أنها مفيدة. ومع ذلك، نظرًا لارتفاع مستوى الاهتمام، فإن وجود عيون إضافية على طلبات السحب موضع تقدير دائمًا.

تحسين قابلية القراءة للكود
~~~~~~~~~~~~~~~~~~~~~~~~~~
يساعد تحسين قابلية قراءة الكود الجميع. من الأفضل في كثير من الأحيان تقديم عدد صغير من طلبات السحب التي تعمل على عدد قليل من الملفات مقابل طلب سحب كبير يعمل على العديد من الملفات. بدء مناقشة في منتدى PyTorch
`هنا <https://discuss.pytorch.org/>`__ أو على مشكلة تتعلق بتحسينك هي أفضل طريقة للبدء.

إضافة حالات الاختبار لجعل قاعدة الكود أكثر متانة
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
تُقدر تغطية الاختبار الإضافية.

الترويج لـ PyTorch
~~~~~~~~~~~~~~~~~
إن استخدامك لـ PyTorch في مشاريعك وأوراقك البحثية وكتاباتك ومقالاتك ومناقشاتك العامة حول الإنترنت يساعد في زيادة الوعي بـ PyTorch ومجتمعنا المتنامي. يرجى التواصل مع
`marketing@pytorch.org <mailto:marketing@pytorch.org>`__
لدعم التسويق.

الفرز حسب القضايا
~~~~~~~~~~~~~~~
إذا شعرت أن إحدى القضايا يمكن أن تستفيد من علامة أو مستوى معين من التعقيد، فعلق على المشكلة وشارك رأيك. إذا
تشعر أن إحدى المشكلات غير مصنفة بشكل صحيح، فعلق وأخبر الفريق.

حول تطوير المصادر المفتوحة
-----------------------------
إذا كانت هذه هي المرة الأولى التي تساهم فيها في مشروع مفتوح المصدر، فقد تبدو بعض جوانب عملية التطوير غير عادية بالنسبة لك.

-  **لا توجد طريقة "للمطالبة" بالمشكلات.** غالبًا ما يريد الأشخاص "المطالبة" بمشكلة عندما يقررون العمل عليها، للتأكد من عدم وجود عمل ضائع عندما ينتهي بهم الأمر بالعمل عليها. هذا لا يعمل بشكل جيد حقًا في المصادر المفتوحة، حيث قد يقرر شخص ما العمل على شيء ما، وفي النهاية لا يجد الوقت للقيام بذلك. لا تتردد في تقديم المعلومات بطريقة استشارية، ولكن في نهاية اليوم، سنأخذ الكود قيد التشغيل والتوافق العام للمضي قدمًا بسرعة.
-  **هناك معيار عالٍ للوظائف الجديدة.** على عكس
   في بيئة الشركات، حيث يمتلك الشخص الذي كتب الكود بشكل ضمني "ملكيته" ويمكن توقع أن يعتني به طوال عمر الكود، بمجرد دمج طلب سحب في مشروع مفتوح المصدر، فإنه يصبح على الفور مسؤولية جماعية لجميع المسؤولين عن الصيانة في المشروع. عندما نقوم بدمج الكود، فإننا نقول إننا، المسؤولون عن الصيانة، يمكننا مراجعة التغييرات اللاحقة وإجراء تصحيح الأخطاء في الكود. وهذا يؤدي بشكل طبيعي إلى معيار أعلى للمساهمة.

الأخطاء الشائعة التي يجب تجنبها
بالتأكيد! فيما يلي الترجمة العربية للنص الذي قدمته بتنسيق ReStructuredText:

------------------------

-  **هل أضفت اختبارات؟** (أو إذا كان التغيير صعب الاختبار، فهل قمت بوصف كيفية اختبار تغييرك؟)

   -  لدينا بضعة دوافع لسبب طلبنا للاختبارات:

      1. لمساعدتنا على معرفة ما إذا كنا سنكسرها لاحقًا
      2. لمساعدتنا على معرفة ما إذا كان التصحيح صحيحًا في المقام الأول
         (نعم، لقد راجعناه، ولكن كما يقول كنوت، "احذر من الكود التالي، لأنني لم أقم بتشغيله، بل أثبت صحته فقط")

   -  متى يكون من المقبول عدم إضافة اختبار؟ في بعض الأحيان، لا يمكن اختبار تغيير ما بشكل مريح، أو أن التغيير صحيح بشكل واضح (ومن غير المرجح أن ينكسر) لدرجة أنه من المقبول عدم اختباره. وعلى النقيض، إذا كان من المحتمل أن يتغير شيء ما (أو من المعروف أنه من المحتمل أن يتغير) عن طريق الخطأ، فمن المهم تخصيص الوقت للتوصل إلى استراتيجية اختبار.

-  **هل طلب السحب (PR) الخاص بك طويل جدًا؟**

   -  من الأسهل لنا مراجعة ودمج طلبات السحب الصغيرة. تزداد صعوبة مراجعة طلب السحب بشكل غير خطي مع حجمه.
   -  متى يكون من المقبول تقديم طلب سحب كبير؟ سيكون من المفيد إذا كانت هناك مناقشة تصميم مناظرة في مشكلة، مع موافقة الأشخاص الذين سيراجعون فرقك. يمكننا أيضًا تقديم المشورة بشأن كيفية تقسيم التغيير الكبير إلى أجزاء يمكن شحنها بشكل فردي. وبالمثل، يكون من المفيد إذا كان هناك وصف كامل لمحتويات طلب السحب: فمن الأسهل مراجعة الكود إذا كنا نعرف ما بداخله!

-  **تعليقات على الأشياء الدقيقة؟** في الحالات التي يكون فيها سلوك كودك دقيقًا، يرجى تضمين تعليقات ووثائق إضافية للسماح لنا بفهم نوايا كودك بشكل أفضل.
-  **هل أضفت حلًا مؤقتًا؟** في بعض الأحيان، يكون الحل الصحيح هو حل مؤقت. ولكن عادة ما يتعين علينا مناقشته.
-  **هل تريد لمس مكون أساسي جدًا؟** لمنع حدوث تراجعات رئيسية، تخضع طلبات السحب التي تمس المكونات الأساسية لفحص إضافي. تأكد من مناقشة تغييراتك مع الفريق قبل إجراء تغييرات رئيسية.
-  **هل تريد إضافة ميزة جديدة؟** إذا كنت تريد إضافة ميزات جديدة، فقم بالتعليق على نيتك في القضية ذات الصلة. يحاول فريقنا التعليق على المجتمع وتزويده بالملاحظات. من الأفضل إجراء مناقشة مفتوحة مع الفريق وبقية المجتمع قبل بناء ميزات جديدة. يساعدنا هذا على البقاء على اطلاع بما تعمل عليه ويزيد من احتمال دمجها.
-  **هل قمت بتعديل كود غير ذي صلة بطلب السحب (PR)؟** للمساعدة في مراجعة الكود، يرجى تضمين الملفات في طلب السحب الخاص بك والتي تتعلق مباشرة بتغييراتك.

الأسئلة الشائعة
--------------------------

-  **كيف يمكنني المساهمة كمراجع؟** هناك الكثير من القيمة إذا قام مطورو المجتمع بإعادة إنتاج المشكلات، أو تجربة الوظائف الجديدة، أو المساعدة بطرق أخرى في تحديد المشكلات أو استكشاف أخطائها وإصلاحها. التعليق على المهام أو طلبات السحب بتفاصيل بيئتك أمر مفيد ومقدر.
-  **فشلت اختبارات CI، ماذا يعني ذلك؟** ربما يكون طلب السحب الخاص بك يعتمد على فرع رئيسي معطل؟ يمكنك محاولة إعادة أساس تغييرك على أحدث فرع رئيسي. يمكنك أيضًا الاطلاع على الحالة الحالية لاختبارات CI للفرع الرئيسي في https://hud.pytorch.org/.
-  **ما هي أكثر التغييرات خطورة؟** أي شيء يمس تكوين البناء هو منطقة محفوفة بالمخاطر. يرجى تجنب تغيير هذه الأشياء ما لم تكن قد أجريت مناقشة مع الفريق مسبقًا.
-  **مرحبًا، ظهر التزام على فرعي، ما الأمر؟** في بعض الأحيان، سيقوم عضو آخر في المجتمع بتوفير تصحيح أو إصلاح لطلب السحب أو فرعك. غالبًا ما تكون هناك حاجة إلى ذلك لاجتياز اختبارات CI.

حول الوثائق
----------------

وثائق بايثون
~~~~~~~~~~~

تتم توليد وثائق PyTorch من مصدر بايثون باستخدام
`سفينكس <https://www.sphinx-doc.org/en/master/>`__. يتم نسخ HTML المولد إلى مجلد الوثائق في الفرع الرئيسي
`pytorch.github.io <https://github.com/pytorch/pytorch.github.io/tree/master/docs>`__،
ويتم تقديمه عبر GitHub pages.

-  الموقع: https://pytorch.org/docs
-  GitHub: https://github.com/pytorch/pytorch/tree/main/docs
-  يتم تقديمه من:
   `https://github.com/pytorch/pytorch.github.io/tree/master/docs <https://github.com/pytorch/pytorch.github.io/tree/master/docs>`__

وثائق C++
~~~~~~~~

بالنسبة لكود C++، نستخدم دوكسن لتوليد ملفات المحتوى. يتم بناء وثائق C++ على خادم خاص ويتم نسخ الملفات الناتجة إلى مستودع
https://github.com/pytorch/cppdocs، ويتم تقديمها من GitHub pages.

-  الموقع: https://pytorch.org/cppdocs
-  GitHub: https://github.com/pytorch/pytorch/tree/main/docs/cpp
-  يتم تقديمه من: https://github.com/pytorch/cppdocs

الدروس التعليمية
---------

الدروس التعليمية في PyTorch هي وثائق تستخدم للمساعدة في فهم كيفية استخدام PyTorch لإنجاز مهام محددة أو لفهم مفاهيم أكثر شمولاً. يتم بناء الدروس التعليمية باستخدام
`معرض سفينكس <https://sphinx-gallery.readthedocs.io/en/latest/index.html>`__
من ملفات مصدر بايثون القابلة للتنفيذ، أو من ملفات النص الفائق (rst).

-  الموقع: https://pytorch.org/tutorials
-  GitHub: https://github.com/pytorch/tutorials

نظرة عامة على بناء الدروس التعليمية
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

بالنسبة للدروس التعليمية، تؤدي `طلبات السحب <https://github.com/pytorch/tutorials/pulls>`__ إلى إعادة بناء الموقع بالكامل باستخدام CircleCI لاختبار آثار التغيير. يتم تقسيم هذه البنية إلى 9 بنيات عامل وتستغرق حوالي 40 دقيقة في المجموع. في الوقت نفسه، نقوم ببناء Netlify باستخدام *make html-noplot*، والذي يقوم ببناء الموقع دون تقديم إخراج الدفتر كصفحات للمراجعة السريعة.

بعد قبول طلب السحب، يتم إعادة بناء الموقع ونشره باستخدام GitHub Actions.

المساهمة في درس تعليمي جديد
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

راجع `دليل المساهمة في الدروس التعليمية لـ PyTorch.org <https://github.com/pytorch/tutorials/#contributing>`__.