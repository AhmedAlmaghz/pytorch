أفضل الممارسات لبيئات التشغيل الخلفية
===========================

وحدة المعالجة المركزية x86
----------------------

عادةً ما يتم تحسين أعباء العمل المترجمة على وحدات المعالجة المركزية الحديثة من نوع x86 باستخدام مجموعات تعليمات Single Instruction Multiple Data (SIMD). تعد SIMD تقنية معالجة متوازية نموذجية للحوسبة عالية الأداء، مثل تدريب نماذج التعلم العميق والاستنتاج. عند تطبيق SIMD، تقوم كل وحدة حسابية بتنفيذ نفس التعليمات مع بيانات مختلفة مخصصة في أي فتحة زمنية معينة. تشمل هندسات مجموعات التعليمات x86 الأكثر استخدامًا والتي تمكن SIMD `AVX و AVX2 و AVX-512 <https://en.wikipedia.org/wiki/Advanced_Vector_Extensions>`_ و `AMX <https://en.wikipedia.org/wiki/Advanced_Matrix_Extensions>`_.

يمكنك التحقق من مجموعات التعليمات المدعومة لجهازك باستخدام `نص collect_env <https://github.com/pytorch/pytorch/blob/main/torch/utils/collect_env.py>`_. نظرًا لأن النص يوفر معلومات بيئية كاملة عن PyTorch، فيمكننا استخدام "grep" لاستخراج السطر الذي يحتوي على معلومات مجموعة التعليمات:

::

    python collect_env.py | grep "a[(v|m)]x"

عادةً، إذا كان AVX-512 مدعومًا، فيجب ملاحظة التعليمات التي تبدأ بـ "avx512" (مثل ``avx512f``، ``avx512bw``، ``avx512_vnni``). إذا كان AMX مدعومًا، فيجب ملاحظة التعليمات التي تبدأ بـ "amx" (مثل ``amx_tile``، ``amx_bf16``، ``amx_int8``).

وعلى وجه التحديد، مع وجود خادم به تعليمات AMX ممكنة، يمكن زيادة تعزيز أداء أعباء العمل من خلال `الاستفادة من AMX <https://pytorch.org/tutorials/recipes/amx.html>`_.